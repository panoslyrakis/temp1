{"version":3,"file":"component---src-pages-using-typescript-tsx-8b8224fb9557fc2dd951.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React from \"react\";\nimport {\n  Box,\n  Stack,\n  Heading,\n  Flex,\n  Button,\n  useDisclosure\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\n//import { Link } from \"gatsby\"\nimport { Link } from '@chakra-ui/react'\n\n// Colors:\n//https://chakra-ui.com/docs/styled-system/theme\n\nconst Header = (props) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const handleToggle = () => (isOpen ? onClose() : onOpen());\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding={6}\n      bg=\"#1f1b50\"\n      color=\"white\"\n      {...props}\n    >\n      <Flex align=\"center\" mr={5}>\n        <Heading as=\"h1\" size=\"md\" letterSpacing={\"tighter\"}>\n          WPMUDEV <br /><small>SLS Code Snippets</small>\n        </Heading>\n      </Flex>\n\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={handleToggle}>\n        <HamburgerIcon />\n      </Box>\n\n      <Stack\n        direction={{ base: \"column\", md: \"row\" }}\n        display={{ base: isOpen ? \"block\" : \"none\", md: \"flex\" }}\n        width={{ base: \"full\", md: \"auto\" }}\n        alignItems=\"center\"\n        flexGrow={1}\n        mt={{ base: 4, md: 0 }}\n      >\n        <Link href=\"/\">Home</Link>\n        <Link href=\"/ZipGithubFile\">Zip Github File</Link>\n\n      </Stack>\n\n      <Box\n        display={{ base: isOpen ? \"block\" : \"none\", md: \"block\" }}\n        mt={{ base: 4, md: 0 }}\n      >\n        <Button\n          variant=\"outline\"\n          _hover={{ bg: \"green.400\", borderColor: \"green.900\" }}\n        >\n          Get support\n        </Button>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Header;","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","props","isOpen","onOpen","onClose","useDisclosure","as","align","justify","wrap","padding","bg","color","mr","size","letterSpacing","display","base","md","onClick","direction","width","alignItems","flexGrow","mt","variant","_hover","borderColor","children","useStaticQuery","siteTitle","siteMetadata","style","margin","maxWidth","marginTop","fontSize","Date","getFullYear","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}